<?xml version="1.0" encoding="UTF-8"?>
<blueprint 	xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:camel-cxf="http://camel.apache.org/schema/blueprint/cxf"
			xsi:schemaLocation="
				http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!-- Set username and password to values you set in etc/user.properties -->
 
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="tcp://localhost:61617"/>
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
    </bean>

    <bean id="defaultDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <argument index="0" value="${jms.queue.name}"/>
    </bean>

	<camelContext  id="camel-adapters" trace="true" xmlns="http://camel.apache.org/schema/blueprint">
	<!-- Takes the sms requests from clients e.g. Awis, 1C, eth. Transfer it to pojos and push them to persisting route using cxf transport -->
		<route id="in_activemq">
			<from uri="activemq:{{jms.queue.name}}"/>
			
			<setBody>
				<simple>
				 	${body[0]}
				</simple>
			</setBody>
			<!-- 
			<to uri="jpa://?persistenceUnit=camel"/>
			<bean ref="persistenceResponseProcessor"/>
			 -->
			<log message="from JPA body: ${body}" />
			
		</route>
	</camelContext>
	
</blueprint>

<!-- 
 	<camelContext id="smsInfo_context" xmlns="http://camel.apache.org/schema/blueprint">
		<route>
			<from uri="cxfrs://bean://smsRsServer" />

			"ref" - is property of been visibility - DSL bean syntax, used to 
				allow the spring been participate in camel context requires that this bean 
				must be in the same context, or in a parent context calls the certain method 
				- setts the operator value to request
			<bean ref="operatorResolver" method="setOperator" />

			injection of the marshaling data format
			<marshal ref="myJaxb" />
			<log message=" *** gmsu API priority *** " />
			<to uri="xslt:convertGmsuRequests.xsl" />
			<split>
				<tokenize token="SMS" xml="true"></tokenize>
				<aggregate strategyRef="aggregatorStrategy"
					completionSize="5" completionTimeout="3000">
					<correlationExpression>
						<constant>true</constant>
					</correlationExpression>
					<setBody>
						<simple>&lt;SMS_WRAPPER&gt;${body}&lt;/SMS_WRAPPER&gt;</simple>
					</setBody>
					<to uri="xslt:convertGmsuSms.xsl" />
					Adjusting the http header
					<setHeader headerName="CamelHttpMethod">
						<constant>POST</constant>
					</setHeader>
					<setHeader headerName="Authorization">
						<constant>Basic bm92YXBvc2h0YTpramQ4NzN5Mg==</constant>
					</setHeader>
					<setExchangePattern pattern="InOut" />
					<log message="[gmsu]    Request to Gsmu ${body}" />
					<to
						uri="{{gmsu.host.send}}?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;proxyHost={{proxy.host}}&amp;proxyPort={{proxy.port}}&amp;proxyAuthMethod=Basic&amp;proxyAuthUsername={{proxy.username}}&amp;proxyAuthPassword={{proxy.password}}" />
					<bean ref="gmsuResponseProcessor" />
				</aggregate>
			</split>
		</route>
	</camelContext>
 -->